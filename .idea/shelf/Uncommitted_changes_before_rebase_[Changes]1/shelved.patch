Index: app/backend/views/layouts/header.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n/**\n * @var View $this\n * @var string $directoryAsset\n */\nuse yii\\helpers\\Url;\nuse yii\\web\\View;\n\n?>\n\n<nav class=\"main-header navbar navbar-expand navbar-white navbar-light\">\n    <!-- Left navbar links -->\n    <ul class=\"navbar-nav\">\n        <li class=\"nav-item\">\n            <a class=\"nav-link\" data-widget=\"pushmenu\" href=\"#\"><i class=\"fas fa-bars\"></i></a>\n        </li>\n        <li class=\"nav-item d-none d-sm-inline-block\">\n            <a href=\"/\" class=\"nav-link\">Main</a>\n        </li>\n        <li class=\"nav-item d-none d-sm-inline-block\">\n        </li>\n    </ul>\n\n    <!-- SEARCH FORM -->\n    <form class=\"form-inline ml-3\">\n        <div class=\"input-group input-group-sm\">\n            <input class=\"form-control form-control-navbar\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n            <div class=\"input-group-append\">\n                <button class=\"btn btn-navbar\" type=\"submit\">\n                    <i class=\"fas fa-search\"></i>\n                </button>\n            </div>\n        </div>\n    </form>\n\n    <!-- Right navbar links -->\n    <ul class=\"navbar-nav ml-auto\">\n        <!-- Messages Dropdown Menu -->\n        <li class=\"nav-item dropdown user-menu\">\n            <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\">\n                <img src=\"<?= $directoryAsset ?>/img/user2-160x160.jpg\" class=\"user-image img-circle elevation-2\"\n                     alt=\"User Image\">\n                <span class=\"d-none d-md-inline\"><?= \\Yii::$app->user->identity->username ?></span>\n            </a>\n\n        <li class=\"nav-item dropdown user-menu\">\n            <a class=\"btn\" href=\"<?= Url::to('/site/logout')?>\" data-method=\"post\">Sign out</a>\n    </ul>\n</nav>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/backend/views/layouts/header.php b/app/backend/views/layouts/header.php
--- a/app/backend/views/layouts/header.php	(revision 7aa75bc6c3cd8ba41883ca9b7a3431919a7146ef)
+++ b/app/backend/views/layouts/header.php	(date 1654618773213)
@@ -18,6 +18,7 @@
             <a href="/" class="nav-link">Main</a>
         </li>
         <li class="nav-item d-none d-sm-inline-block">
+            <a href="<?= Url::to(['/member']); ?>" class="nav-link">Members</a>
         </li>
     </ul>
 
Index: app/console/migrations/m130526_201442_create_table_news.php
===================================================================
diff --git a/app/console/migrations/m130526_201442_create_table_news.php b/app/console/migrations/m130526_201442_create_table_news.php
deleted file mode 100644
--- a/app/console/migrations/m130526_201442_create_table_news.php	(revision 7aa75bc6c3cd8ba41883ca9b7a3431919a7146ef)
+++ /dev/null	(revision 7aa75bc6c3cd8ba41883ca9b7a3431919a7146ef)
@@ -1,40 +0,0 @@
-<?php
-
-use yii\db\Migration;
-
-/**
- * Class m130526_201442_create_table_news
- */
-class m130526_201442_create_table_news extends Migration
-{
-
-    /**
-     * {@inheritdoc}
-     */
-    public function up()
-    {
-        $tableOptions = null;
-        if ($this->db->driverName === 'mysql') {
-            // http://stackoverflow.com/questions/766809/whats-the-difference-between-utf8-general-ci-and-utf8-unicode-ci
-            $tableOptions = 'CHARACTER SET utf8 COLLATE utf8_unicode_ci ENGINE=InnoDB';
-        }
-
-        $this->createTable('{{%news}}', [
-            'id' => $this->primaryKey(),
-            'header' => $this->string()->notNull()->unique(),
-            'text' => $this->text()->notNull(),
-            'image' => $this->string(),
-            'created_at' => $this->dateTime(),
-            'updated_at' => $this->dateTime(),
-            'photo_id' => $this->string(),
-        ], $tableOptions);
-    }
-
-    /**
-     * {@inheritdoc}
-     */
-    public function down()
-    {
-        $this->dropTable('{{%news}}');
-    }
-}
\ No newline at end of file
Index: app/frontend/views/site/index.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nuse yii\\data\\ActiveDataProvider;\nuse yii\\grid\\GridView;\nuse yii\\helpers\\Html;\nuse yii\\helpers\\Url;\n\n/**\n * @var yii\\web\\View $this\n * @var ActiveDataProvider $dataProvider\n */\n\n$this->title = 'My Yii Application';\n?>\n<div class=\"site-index\">\n\n    <div class=\"jumbotron text-center bg-transparent\">\n        Some text\n    </div>\n\n    <div class=\"body-content\">\n        <?= GridView::widget([\n            'dataProvider' => $dataProvider,\n            'columns' => [\n                [\n                    'attribute' => 'full_name',\n                    'value' => function ($profileInfo) {\n                        return Html::a(Html::encode($profileInfo->full_name), Url::to(['profile/'.$profileInfo->userid]));\n                    },\n                    'format' => 'raw',\n                ],\n                'distance_day',\n                'distance_week',\n                'distance_all',\n            ]\n        ])\n        ?>\n    </div>\n</div>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/frontend/views/site/index.php b/app/frontend/views/site/index.php
--- a/app/frontend/views/site/index.php	(revision 7aa75bc6c3cd8ba41883ca9b7a3431919a7146ef)
+++ b/app/frontend/views/site/index.php	(date 1654618773213)
@@ -1,5 +1,6 @@
 <?php
 
+use common\models\ProfileInfo;
 use yii\data\ActiveDataProvider;
 use yii\grid\GridView;
 use yii\helpers\Html;
Index: app/backend/controllers/MemberController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/backend/controllers/MemberController.php b/app/backend/controllers/MemberController.php
new file mode 100644
--- /dev/null	(date 1654618773209)
+++ b/app/backend/controllers/MemberController.php	(date 1654618773209)
@@ -0,0 +1,134 @@
+<?php
+
+namespace backend\controllers;
+
+use app\models\Member;
+use app\models\MemberSearch;
+use yii\web\Controller;
+use yii\web\NotFoundHttpException;
+use yii\filters\VerbFilter;
+
+/**
+ * MemberController implements the CRUD actions for Member model.
+ */
+class MemberController extends Controller
+{
+    /**
+     * @inheritDoc
+     */
+    public function behaviors()
+    {
+        return array_merge(
+            parent::behaviors(),
+            [
+                'verbs' => [
+                    'class' => VerbFilter::className(),
+                    'actions' => [
+                        'delete' => ['POST'],
+                    ],
+                ],
+            ]
+        );
+    }
+
+    /**
+     * Lists all Member models.
+     *
+     * @return string
+     */
+    public function actionIndex()
+    {
+        $searchModel = new MemberSearch();
+        $dataProvider = $searchModel->search($this->request->queryParams);
+
+        return $this->render('index', [
+            'searchModel' => $searchModel,
+            'dataProvider' => $dataProvider,
+        ]);
+    }
+
+    /**
+     * Displays a single Member model.
+     * @param int $id ID
+     * @return string
+     * @throws NotFoundHttpException if the model cannot be found
+     */
+    public function actionView($id)
+    {
+        return $this->render('view', [
+            'model' => $this->findModel($id),
+        ]);
+    }
+
+    /**
+     * Creates a new Member model.
+     * If creation is successful, the browser will be redirected to the 'view' page.
+     * @return string|\yii\web\Response
+     */
+    public function actionCreate()
+    {
+        $model = new Member();
+
+        if ($this->request->isPost) {
+            if ($model->load($this->request->post()) && $model->save()) {
+                return $this->redirect(['view', 'id' => $model->id]);
+            }
+        } else {
+            $model->loadDefaultValues();
+        }
+
+        return $this->render('create', [
+            'model' => $model,
+        ]);
+    }
+
+    /**
+     * Updates an existing Member model.
+     * If update is successful, the browser will be redirected to the 'view' page.
+     * @param int $id ID
+     * @return string|\yii\web\Response
+     * @throws NotFoundHttpException if the model cannot be found
+     */
+    public function actionUpdate($id)
+    {
+        $model = $this->findModel($id);
+
+        if ($this->request->isPost && $model->load($this->request->post()) && $model->save()) {
+            return $this->redirect(['view', 'id' => $model->id]);
+        }
+
+        return $this->render('update', [
+            'model' => $model,
+        ]);
+    }
+
+    /**
+     * Deletes an existing Member model.
+     * If deletion is successful, the browser will be redirected to the 'index' page.
+     * @param int $id ID
+     * @return \yii\web\Response
+     * @throws NotFoundHttpException if the model cannot be found
+     */
+    public function actionDelete($id)
+    {
+        $this->findModel($id)->delete();
+
+        return $this->redirect(['index']);
+    }
+
+    /**
+     * Finds the Member model based on its primary key value.
+     * If the model is not found, a 404 HTTP exception will be thrown.
+     * @param int $id ID
+     * @return Member the loaded model
+     * @throws NotFoundHttpException if the model cannot be found
+     */
+    protected function findModel($id)
+    {
+        if (($model = Member::findOne(['id' => $id])) !== null) {
+            return $model;
+        }
+
+        throw new NotFoundHttpException('The requested page does not exist.');
+    }
+}
Index: app/backend/models/Member.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/backend/models/Member.php b/app/backend/models/Member.php
new file mode 100644
--- /dev/null	(date 1654618773209)
+++ b/app/backend/models/Member.php	(date 1654618773209)
@@ -0,0 +1,46 @@
+<?php
+
+namespace app\models;
+
+use Yii;
+
+/**
+ * This is the model class for table "people".
+ *
+ * @property int $id
+ * @property string $name
+ * @property string $city
+ */
+class Member extends \yii\db\ActiveRecord
+{
+    /**
+     * {@inheritdoc}
+     */
+    public static function tableName()
+    {
+        return 'people';
+    }
+
+    /**
+     * {@inheritdoc}
+     */
+    public function rules()
+    {
+        return [
+            [['name', 'city'], 'required'],
+            [['name', 'city'], 'string', 'max' => 255],
+        ];
+    }
+
+    /**
+     * {@inheritdoc}
+     */
+    public function attributeLabels()
+    {
+        return [
+            'id' => 'ID',
+            'name' => 'Name',
+            'city' => 'City',
+        ];
+    }
+}
Index: app/backend/models/MemberSearch.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/backend/models/MemberSearch.php b/app/backend/models/MemberSearch.php
new file mode 100644
--- /dev/null	(date 1654618773209)
+++ b/app/backend/models/MemberSearch.php	(date 1654618773209)
@@ -0,0 +1,69 @@
+<?php
+
+namespace app\models;
+
+use yii\base\Model;
+use yii\data\ActiveDataProvider;
+use app\models\Member;
+
+/**
+ * MemberSearch represents the model behind the search form of `app\models\Member`.
+ */
+class MemberSearch extends Member
+{
+    /**
+     * {@inheritdoc}
+     */
+    public function rules()
+    {
+        return [
+            [['id'], 'integer'],
+            [['name', 'city'], 'safe'],
+        ];
+    }
+
+    /**
+     * {@inheritdoc}
+     */
+    public function scenarios()
+    {
+        // bypass scenarios() implementation in the parent class
+        return Model::scenarios();
+    }
+
+    /**
+     * Creates data provider instance with search query applied
+     *
+     * @param array $params
+     *
+     * @return ActiveDataProvider
+     */
+    public function search($params)
+    {
+        $query = Member::find();
+
+        // add conditions that should always apply here
+
+        $dataProvider = new ActiveDataProvider([
+            'query' => $query,
+        ]);
+
+        $this->load($params);
+
+        if (!$this->validate()) {
+            // uncomment the following line if you do not want to return any records when validation fails
+            // $query->where('0=1');
+            return $dataProvider;
+        }
+
+        // grid filtering conditions
+        $query->andFilterWhere([
+            'id' => $this->id,
+        ]);
+
+        $query->andFilterWhere(['like', 'name', $this->name])
+            ->andFilterWhere(['like', 'city', $this->city]);
+
+        return $dataProvider;
+    }
+}
Index: app/frontend/config/main.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n$params = array_merge(\n    require __DIR__ . '/../../common/config/params.php',\n    require __DIR__ . '/../../common/config/params-local.php',\n    require __DIR__ . '/params.php',\n    require __DIR__ . '/params-local.php'\n);\n\nreturn [\n    'id' => 'app-frontend',\n    'basePath' => dirname(__DIR__),\n    'bootstrap' => ['log'],\n    'controllerNamespace' => 'frontend\\controllers',\n    'components' => [\n        'request' => [\n            'cookieValidationKey' => '36617971150091636078',\n            'csrfParam' => '_csrf-frontend',\n        ],\n        'user' => [\n            'identityClass' => 'common\\models\\User',\n            'enableAutoLogin' => true,\n            'identityCookie' => ['name' => '_frontendUser', // unique for frontend\n                'httpOnly' => true],\n        ],\n        'session' => [\n            // this is the name of the session cookie used for login on the frontend\n            'name' => 'advanced-frontend',\n            'savePath' => sys_get_temp_dir(),\n        ],\n        'log' => [\n            'traceLevel' => YII_DEBUG ? 3 : 0,\n            'targets' => [\n                [\n                    'class' => 'yii\\log\\FileTarget',\n                    'levels' => ['error', 'warning'],\n                ],\n            ],\n        ],\n        'errorHandler' => [\n            'errorAction' => 'site/error',\n        ],\n\n        'urlManager' => [\n            'enablePrettyUrl' => true,\n            'showScriptName' => false,\n            'rules' => [\n                '' => 'site/index',\n                '<action>' => 'site/<action>',\n                'profile/<id:\\d+>' => 'profile/show',\n                'news/<id:\\d+>' => 'news/show',\n            ],\n        ],\n    ],\n    'params' => $params,\n];\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/frontend/config/main.php b/app/frontend/config/main.php
--- a/app/frontend/config/main.php	(revision 7aa75bc6c3cd8ba41883ca9b7a3431919a7146ef)
+++ b/app/frontend/config/main.php	(date 1654618773213)
@@ -47,7 +47,6 @@
                 '' => 'site/index',
                 '<action>' => 'site/<action>',
                 'profile/<id:\d+>' => 'profile/show',
-                'news/<id:\d+>' => 'news/show',
             ],
         ],
     ],
Index: app/backend/views/member/_search.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/backend/views/member/_search.php b/app/backend/views/member/_search.php
new file mode 100644
--- /dev/null	(date 1654618773213)
+++ b/app/backend/views/member/_search.php	(date 1654618773213)
@@ -0,0 +1,31 @@
+<?php
+
+use yii\helpers\Html;
+use yii\widgets\ActiveForm;
+
+/* @var $this yii\web\View */
+/* @var $model app\models\MemberSearch */
+/* @var $form yii\widgets\ActiveForm */
+?>
+
+<div class="member-search">
+
+    <?php $form = ActiveForm::begin([
+        'action' => ['index'],
+        'method' => 'get',
+    ]); ?>
+
+    <?= $form->field($model, 'id') ?>
+
+    <?= $form->field($model, 'name') ?>
+
+    <?= $form->field($model, 'city') ?>
+
+    <div class="form-group">
+        <?= Html::submitButton('Search', ['class' => 'btn btn-primary']) ?>
+        <?= Html::resetButton('Reset', ['class' => 'btn btn-outline-secondary']) ?>
+    </div>
+
+    <?php ActiveForm::end(); ?>
+
+</div>
Index: app/backend/views/member/view.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/backend/views/member/view.php b/app/backend/views/member/view.php
new file mode 100644
--- /dev/null	(date 1654618773213)
+++ b/app/backend/views/member/view.php	(date 1654618773213)
@@ -0,0 +1,38 @@
+<?php
+
+use yii\helpers\Html;
+use yii\widgets\DetailView;
+
+/* @var $this yii\web\View */
+/* @var $model app\models\Member */
+
+$this->title = $model->name;
+$this->params['breadcrumbs'][] = ['label' => 'Members', 'url' => ['index']];
+$this->params['breadcrumbs'][] = $this->title;
+\yii\web\YiiAsset::register($this);
+?>
+<div class="member-view">
+
+    <h1><?= Html::encode($this->title) ?></h1>
+
+    <p>
+        <?= Html::a('Update', ['update', 'id' => $model->id], ['class' => 'btn btn-primary']) ?>
+        <?= Html::a('Delete', ['delete', 'id' => $model->id], [
+            'class' => 'btn btn-danger',
+            'data' => [
+                'confirm' => 'Are you sure you want to delete this item?',
+                'method' => 'post',
+            ],
+        ]) ?>
+    </p>
+
+    <?= DetailView::widget([
+        'model' => $model,
+        'attributes' => [
+            'id',
+            'name',
+            'city',
+        ],
+    ]) ?>
+
+</div>
Index: .idea/dataSources.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"DataSourceManagerImpl\" format=\"xml\" multifile-model=\"true\">\n    <data-source source=\"LOCAL\" name=\"@localhost\" uuid=\"57a2ca1b-cacd-45ed-af9e-b56196697b35\">\n      <driver-ref>mysql.8</driver-ref>\n      <synchronize>true</synchronize>\n      <jdbc-driver>com.mysql.cj.jdbc.Driver</jdbc-driver>\n      <jdbc-url>jdbc:mysql://localhost:3306</jdbc-url>\n      <working-dir>$ProjectFileDir$</working-dir>\n      <driver-properties>\n        <property name=\"allowPublicKeyRetrieval\" value=\"TRUE\" />\n      </driver-properties>\n    </data-source>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/dataSources.xml b/.idea/dataSources.xml
--- a/.idea/dataSources.xml	(revision 7aa75bc6c3cd8ba41883ca9b7a3431919a7146ef)
+++ b/.idea/dataSources.xml	(date 1654618773209)
@@ -7,9 +7,6 @@
       <jdbc-driver>com.mysql.cj.jdbc.Driver</jdbc-driver>
       <jdbc-url>jdbc:mysql://localhost:3306</jdbc-url>
       <working-dir>$ProjectFileDir$</working-dir>
-      <driver-properties>
-        <property name="allowPublicKeyRetrieval" value="TRUE" />
-      </driver-properties>
     </data-source>
   </component>
 </project>
\ No newline at end of file
Index: app/backend/views/member/_form.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/backend/views/member/_form.php b/app/backend/views/member/_form.php
new file mode 100644
--- /dev/null	(date 1654618773213)
+++ b/app/backend/views/member/_form.php	(date 1654618773213)
@@ -0,0 +1,25 @@
+<?php
+
+use yii\helpers\Html;
+use yii\widgets\ActiveForm;
+
+/* @var $this yii\web\View */
+/* @var $model app\models\Member */
+/* @var $form yii\widgets\ActiveForm */
+?>
+
+<div class="member-form">
+
+    <?php $form = ActiveForm::begin(); ?>
+
+    <?= $form->field($model, 'name')->textInput(['maxlength' => true]) ?>
+
+    <?= $form->field($model, 'city')->textInput(['maxlength' => true]) ?>
+
+    <div class="form-group">
+        <?= Html::submitButton('Save', ['class' => 'btn btn-success']) ?>
+    </div>
+
+    <?php ActiveForm::end(); ?>
+
+</div>
Index: app/backend/views/member/update.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/backend/views/member/update.php b/app/backend/views/member/update.php
new file mode 100644
--- /dev/null	(date 1654618773213)
+++ b/app/backend/views/member/update.php	(date 1654618773213)
@@ -0,0 +1,21 @@
+<?php
+
+use yii\helpers\Html;
+
+/* @var $this yii\web\View */
+/* @var $model app\models\Member */
+
+$this->title = 'Update Member: ' . $model->name;
+$this->params['breadcrumbs'][] = ['label' => 'Members', 'url' => ['index']];
+$this->params['breadcrumbs'][] = ['label' => $model->name, 'url' => ['view', 'id' => $model->id]];
+$this->params['breadcrumbs'][] = 'Update';
+?>
+<div class="member-update">
+
+    <h1><?= Html::encode($this->title) ?></h1>
+
+    <?= $this->render('_form', [
+        'model' => $model,
+    ]) ?>
+
+</div>
Index: app/backend/views/member/index.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/backend/views/member/index.php b/app/backend/views/member/index.php
new file mode 100644
--- /dev/null	(date 1654618773213)
+++ b/app/backend/views/member/index.php	(date 1654618773213)
@@ -0,0 +1,44 @@
+<?php
+
+use yii\helpers\Html;
+use yii\helpers\Url;
+use yii\grid\ActionColumn;
+use yii\grid\GridView;
+
+/* @var $this yii\web\View */
+/* @var $searchModel app\models\MemberSearch */
+/* @var $dataProvider yii\data\ActiveDataProvider */
+
+$this->title = 'Members';
+$this->params['breadcrumbs'][] = $this->title;
+?>
+<div class="member-index">
+
+    <h1><?= Html::encode($this->title) ?></h1>
+
+    <p>
+        <?= Html::a('Create Member', ['create'], ['class' => 'btn btn-success']) ?>
+    </p>
+
+    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
+
+    <?= GridView::widget([
+        'dataProvider' => $dataProvider,
+        'filterModel' => $searchModel,
+        'columns' => [
+            ['class' => 'yii\grid\SerialColumn'],
+
+            'id',
+            'name',
+            'city',
+            [
+                'class' => ActionColumn::className(),
+                'urlCreator' => function ($action, Member $model, $key, $index, $column) {
+                    return Url::toRoute([$action, 'id' => $model->id]);
+                 }
+            ],
+        ],
+    ]); ?>
+
+
+</div>
Index: app/backend/views/member/create.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/backend/views/member/create.php b/app/backend/views/member/create.php
new file mode 100644
--- /dev/null	(date 1654618773213)
+++ b/app/backend/views/member/create.php	(date 1654618773213)
@@ -0,0 +1,20 @@
+<?php
+
+use yii\helpers\Html;
+
+/* @var $this yii\web\View */
+/* @var $model app\models\Member */
+
+$this->title = 'Create Member';
+$this->params['breadcrumbs'][] = ['label' => 'Members', 'url' => ['index']];
+$this->params['breadcrumbs'][] = $this->title;
+?>
+<div class="member-create">
+
+    <h1><?= Html::encode($this->title) ?></h1>
+
+    <?= $this->render('_form', [
+        'model' => $model,
+    ]) ?>
+
+</div>
